{"version":3,"sources":["components/Header.js","components/Error.js","components/Formulario.js","components/Clima.js","App.js","reportWebVitals.js","index.js"],"names":["Header","titulo","className","href","Error","mensaje","Formulario","busqueda","guardarBusqueda","guardarConsultar","useState","error","guardarError","ciudad","pais","handleChange","e","target","name","value","onSubmit","preventDefault","trim","type","id","onChange","htmlFor","Clima","resultado","main","kelvin","parseFloat","temp","toFixed","temp_max","temp_min","App","componente","consultar","guardarResultado","useEffect","a","url","fetch","respuesta","json","cod","consultarAPI","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f463c880.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Header = ({titulo}) => {\n    return(\n        <nav>\n            <div className=\"nav-wrapper light-blue darken-2\">\n                <a href=\"#!\" className=\"brand-logo\"> { titulo } </a>\n            </div>\n        </nav>\n    );\n}\n\nHeader.propTypes = {\n    titulo: PropTypes.string.isRequired\n}\nexport default Header;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Error = ({mensaje}) => {\n    return ( \n        <p className=\"red darken-4 error\"> {mensaje} </p>\n     );\n}\n\nError.propTypes = {\n    mensaje: PropTypes.string.isRequired\n}\nexport default Error;","import React, { useState } from 'react';\nimport Error from './Error';\nimport PropTypes from 'prop-types';\n\nconst Formulario = ({busqueda, guardarBusqueda, guardarConsultar}) => {\n    \n    // State del Formulario\n    /*const [busqueda, guardarBusqueda] = useState({\n        ciudad: '',\n        pais: ''\n    });*/\n\n    const [error, guardarError] = useState(false);\n\n    // Extraer ciudad y pais\n\n    const { ciudad, pais } = busqueda\n\n    // Funcion que coloca los elementos en el state\n\n    const handleChange = e => {\n        // actualizar el state\n        guardarBusqueda({\n            ...busqueda,\n            [e.target.name]: e.target.value\n        });\n    }\n\n    // Función cuando el usuario da submit al formulario\n    \n    const handleSubmit = e => {\n        e.preventDefault();\n        //validar\n\n        if(ciudad.trim() === '' || pais.trim() === ''){\n            guardarError(true);\n            return;\n        }\n\n        guardarError(false);\n\n        // pasarlo al componente principal\n        guardarConsultar(true);\n    }\n    \n    \n    return ( \n        <form\n            onSubmit={ handleSubmit }\n        >\n            {error ? <Error mensaje=\"Todos los campos son obligatorios\"/> : null}\n            <div className=\"input-field col s12\">\n                <input \n                type=\"text\"\n                name=\"ciudad\"\n                id=\"ciudad\"\n                value= { ciudad }\n                onChange={handleChange}\n                />\n                <label htmlFor=\"ciudad\" >Ciudad: </label>\n            </div>\n\n            <div className=\"input-field col s12\">\n                <select \n                name=\"pais\" \n                id=\"pais\"\n                value= { pais }\n                onChange={handleChange}\n                >\n                    <option value=\"\">-- Seleccione un país --</option>\n                    <option value=\"US\">Estados Unidos</option>\n                    <option value=\"MX\">México</option>\n                    <option value=\"AR\">Argentina</option>\n                    <option value=\"CO\">Colombia</option>\n                    <option value=\"CR\">Costa Rica</option>\n                    <option value=\"ES\">España</option>\n                    <option value=\"PE\">Perú</option>\n                </select>\n                <label htmlFor=\"pais\">País: </label>\n            </div>\n\n            <div className=\"input-field col s12\">\n            <button\n            type=\"submit\"\n            className=\"waves-effect waves-light btn-large btn-block yellow accent-4 col s12\"\n            >\n                Buscar Clima\n            </button>\n            </div>\n        </form>\n     );\n}\n\nFormulario.propTypes = {\n    busqueda: PropTypes.object.isRequired, \n    guardarBusqueda: PropTypes.func.isRequired,\n    guardarConsultar: PropTypes.func.isRequired\n}\nexport default Formulario;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Clima = ({resultado}) => {\n    //extraer los valores\n    const {name, main} = resultado;\n\n    if(!name) return null;\n\n    // Grados Kelvin a Celsius\n\n    const kelvin = 273.15;\n\n    return (\n        <div className=\"card-panel white col s12\">\n            <div className=\"black-text\">\n                <h2>El clima en {name} es: </h2>\n                <p className=\"temperatura\">\n                    {parseFloat(main.temp - kelvin, 10).toFixed(1)} \n                    <span>&#x2103;</span>\n                </p>\n                <p> Temperatura Máxima:\n                    {parseFloat(main.temp_max - kelvin, 10).toFixed(1)} \n                    <span>&#x2103;</span>\n                </p>\n                <p> Temperatura Mínima:\n                    {parseFloat(main.temp_min - kelvin, 10).toFixed(1)} \n                    <span>&#x2103;</span>\n                </p>\n            </div>\n        </div>\n      );\n}\n \nClima.propTypes = {\n    resultado: PropTypes.object.isRequired\n}\nexport default Clima;","import React, { Fragment, useState, useEffect } from \"react\";\nimport Header from \"./components/Header\";\nimport Formulario from \"./components/Formulario\";\nimport Clima from \"./components/Clima\";\nimport Error from \"./components/Error\";\n\nfunction App() {\n\n  // State Principal App\n  const [busqueda, guardarBusqueda] = useState({\n    ciudad: '',\n    pais: ''\n  });\n\n  const [consultar, guardarConsultar] = useState(false);\n  const [resultado, guardarResultado] = useState({});\n  const [error, guardarError] = useState(false);\n\n\n  const { ciudad, pais } = busqueda;\n\n  useEffect(() => {\n    const consultarAPI = async () => {\n\n      if (consultar) {\n      const appId = '4e444544b14723cda9c455820eb0aa90'\n      const url = `https://api.openweathermap.org/data/2.5/weather?q=${ciudad},${pais}&appid=${appId}`;\n\n      const respuesta = await fetch(url);\n      const resultado = await respuesta.json();\n\n      guardarResultado(resultado);\n\n      guardarConsultar(false);  \n\n      // Detecta si hubo resultados correctos en la consulta\n      if(resultado.cod === \"404\"){\n        guardarError(true);\n      } else {\n        guardarError(false);\n      }  \n      \n      }\n      \n    }\n    consultarAPI();\n    // eslint-disable-next-line\n  }, [consultar]);\n\n  let componente;\n\n  if(error) {\n    componente = <Error mensaje=\"No hay resultados\"/>\n  } else {\n    componente = <Clima resultado={resultado}/>\n  }\n  \n  return (\n    <Fragment>\n      <Header\n       titulo='Clima React App'\n      />\n\n      <div className=\"contenedor-form\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col m6 s12\">\n              <Formulario\n              busqueda={busqueda}\n              guardarBusqueda={guardarBusqueda}\n              guardarConsultar={guardarConsultar}\n              />\n            </div>\n            <div className=\"col m6 s12\">\n              { componente }\n            </div>\n          </div>\n        </div>\n\n      </div>\n    </Fragment>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}